version: '3'

networks:
  reverse-proxy:
    external: true

configs:
  authentik:
    name: authentik_config_${TAG}
    file: ./config.yaml

services:
  vikunja:
    image: vikunja/vikunja:0.23.0
    networks:
      - reverse-proxy
    configs:
      - source: authentik
        target: /etc/vikunja/config.yaml
    environment:
      PUID: 99
      PGID: 100
      #Service
      VIKUNJA_SERVICE_PUBLICURL: https://task.actuary.dev
      VIKUNJA_SERVICE_JWTSECRET: ${VIKUNJA_SERVICE_JWTSECRET}
      #Database
      VIKUNJA_DATABASE_TYPE: postgres
      VIKUNJA_DATABASE_HOST: unraid.lan
      VIKUNJA_DATABASE_DATABASE: vikunja
      VIKUNJA_DATABASE_PASSWORD: ${VIKUNJA_DATABASE_PASSWORD}
      VIKUNJA_DATABASE_USER: ${VIKUNJA_DATABASE_USER}
      #Authentik
      AUTHENTIK_ID_VIKUNJA: ${{ vars.AUTHENTIK_ID_VIKUNJA }}
      AUTHENTIK_SECRET_VIKUNJA: ${{ secrets.AUTHENTIK_SECRET_VIKUNJA }}
      #Cache
      VIKUNJA_CACHE_TYPE: redis
      VIKUNJA_REDIS_HOST: 'unraid.lan:6379'
      VIKUNJA_REDIS_ENABLED: 1
      VIKUNJA_CACHE_ENABLED: 1
    ports:
      - 3456:3456
    deploy:
      labels:
        ## Proxy
        - "traefik.enable=true"
        - "traefik.http.routers.task.rule=Host(`task.actuary.dev`)"
        - "traefik.http.routers.task.entrypoints=websecure"
        - "traefik.http.routers.task.service=task"
        - "traefik.http.routers.task.tls.certresolver=myresolver"
        - "traefik.http.services.task.loadbalancer.server.port=3456"
        ## Middlewares
        #- "traefik.http.routers.task.middlewares=middlewares-authentik@file"
    volumes:
      - /mnt/user/docker/volumes/vikunja:/app/vikunja/files
